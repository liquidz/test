name: Tag and Release

on:
  # push:
  #   branches:
  #     - master
  workflow_dispatch:
    inputs:
      release:
        description: 'True to release'
        required: true
        type: boolean

# jobs:
#   first:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v3
#         with:
#           ref: master
#       - run: |
#           git config user.email "liquidz.uo@gmail.com"
#           git config user.name ${{ github.actor }}
#           git restore .
#           bash foo.sh
#           git commit -a -m "test [skip ci]"
#           git push origin master
#           git fetch origin dummy2
#           git switch dummy2
#           git rebase master
#           bash foo.sh
#           git commit -a -m "after test [skip ci]"
#           git push origin dummy2
#
jobs:
  tag-and-release:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: 11
      - uses: DeLaGuardo/setup-clojure@master
        with:
          cli: latest

      - name: Show versions
        run: |
          java -version
          clojure --version

      - uses: actions/cache@v3
        with:
          path: ~/.m2
          key: test-m2-${{ hashFiles('deps.edn') }}-v1

      - name: Lint build.edn
        run: clojure -T:build lint

      - id: tag
        run: |
          clojure -T:build update-documents
          git diff
          git config --global user.email "github-actions@example.com"
          git config --global user.name "github-actions"
          git add -A
          git commit -m "Update for release" || exit 0
          git push

      - uses: liquidz/create-release@4233b11e91ec0d1aa8d5dca9ebd7fe3ceb12d696
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.version }}
          release_name: ${{ steps.tag.outputs.version }}
          body: released
          draft: false
          prerelease: false
