name: Tag and Release

on:
  # push:
  #   branches:
  #     - master
  workflow_dispatch:
    inputs:
      release:
        description: 'True to release'
        required: true
        type: boolean

jobs:
  first:
    runs-on: ubuntu-latest
    steps:
      - run: echo 'foo'
      - name: bar
        if: ${{ inputs.release }}
        run: echo 'bar'

  tag-and-release:
    needs: [first]
    if:  ${{ inputs.release }}
    runs-on: ubuntu-latest
    steps:
      # - uses: actions/checkout@v3
      #   with:
      #     fetch-depth: 0
      - run: echo 'world'

      # - uses: actions/setup-java@v3
      #   with:
      #     distribution: 'zulu'
      #     java-version: '11'
      #     java-package: jdk
      #     architecture: x64
      #
      # - uses: DeLaGuardo/setup-clojure@master
      #   with:
      #     cli: latest
      #
      # - name: Show versions
      #   run: |
      #     java -version
      #     clojure --version
      #
      # - name: Cache dependencies
      #   uses: actions/cache@v3
      #   with:
      #     path: ~/.m2
      #     key: clj-cache-${{ hashFiles('**/deps.edn') }}
      #     restore-keys: |
      #       clj-cache-
      #
      # # - name: Deploy to clojars
      # #   id: deploy
      # #   run: clojure -T:build deploy
      # #   env:
      # #     CLOJARS_PASSWORD: ${{secrets.CLOJARS_PASSWORD}}
      # #     CLOJARS_USERNAME: ${{secrets.CLOJARS_USERNAME}}
      # #
      # # - uses: actions/create-release@v1
      # #   env:
      # #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # #   with:
      # #     tag_name: ${{ steps.deploy.outputs.version }}
      # #     release_name: ${{ steps.deploy.outputs.version }}
      # #     body: |
      # #       released
      # #     draft: false
      # #     prerelease: false
      #
      # - run: |
      #     clojure -T:build tag-changelog
      #     git diff
      #     git config --global user.email "github-actions@example.com"
      #     git config --global user.name "github-actions"
      #     git add -A
      #     git commit -m "Updated CHANGELOG" || exit 0
      #     git push
